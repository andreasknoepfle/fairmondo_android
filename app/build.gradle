apply plugin: 'com.android.application'
apply plugin: 'android-apt'

configurations {
    apt
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        resourcePackageName "de.handler.mobile.android.fairmondo"
    }
}


android {
    compileSdkVersion 22
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "de.handler.mobile.android.fairmondo"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    // Project Dependencies
    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:support-v4:${supportLibraryVersion}"
    compile "com.android.support:palette-v7:${supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${supportLibraryVersion}"

    // Regular annotations supported by android
    compile "com.android.support:support-annotations:${supportLibraryVersion}"

    // Mapping of different objects
    compile "org.modelmapper:modelmapper:${modelMapperVersion}"

    // Android annotations for easy readable code
    apt "org.androidannotations:androidannotations:${androidAnnotationsVersion}"
    compile "org.androidannotations:androidannotations-api:${androidAnnotationsVersion}"

    // For Converters in RestServices
    compile "org.springframework.android:spring-android-core:${springVersion}"
    compile "org.springframework.android:spring-android-rest-template:${springVersion}"
    compile "com.google.code.gson:gson:${gsonVersion}"

    // Image Loader
    compile "com.mcxiaoke.volley:library:${volleyVersion}"

    // Parceler generates the Parcelable classes
    compile "org.parceler:parceler-api:${parcelerVersion}"
    apt "org.parceler:parceler:${parcelerVersion}"

    //Test Dependencies
    // Espresso
    testCompile "junit:junit:${junitVersion}"
    androidTestCompile ("com.android.support.test.espresso:espresso-core:${espressoVersion}") {
        exclude module: 'support-annotations'
    }
    androidTestCompile ("com.android.support.test:runner:${androidTestRunnerVersion}") {
        exclude module: 'support-annotations'
    }
}
